[Unit]
Description=distri-repobrowser
StartLimitIntervalSec=0
StartLimitBurst=0

[Service]
Restart=always

ExecStart=/srv/browse.distr1.org/distri-repobrowser -assets=/srv/browse.distr1.org/assets -upstream_status_path=/var/lib/distri-checkupstream/upstream_state.json

StateDirectory=distri-checkupstream

# See also http://0pointer.net/blog/dynamic-users-with-systemd.html
DynamicUser=yes

# Specifying User= with DynamicUser=yes allows for easy up- and downgrades
# between dynamic and statically allocated users.
# Also useful to make sure the allocated user name stays the same,
# e.g. for PostgreSQL authentication.
User=distri-repobrowser

# Remove all capabilities(7), this is a stateless web server:
CapabilityBoundingSet=

# Ensure the service can never gain new privileges:
NoNewPrivileges=yes

# Prohibit access to any kind of namespacing:
RestrictNamespaces=yes

# Prohibit exotic address families:
RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6

# Make home directories inaccessible:
ProtectHome=true

# Make device nodes except for /dev/null, /dev/zero, /dev/full,
# /dev/random and /dev/urandom inaccessible:
PrivateDevices=yes

# Make users other than root and the user for this daemon inaccessible:
PrivateUsers=yes

# Make cgroup file system hierarchy inaccessible:
ProtectControlGroups=yes

# Deny kernel module loading:
ProtectKernelModules=yes

# Make kernel variables (e.g. /proc/sys) read-only:
ProtectKernelTunables=yes

# Filter dangerous system calls. The following is listed as safe basic choice
# in systemd.exec(5):
SystemCallArchitectures=native
SystemCallFilter=@system-service
SystemCallErrorNumber=EPERM

[Install]
WantedBy=multi-user.target
